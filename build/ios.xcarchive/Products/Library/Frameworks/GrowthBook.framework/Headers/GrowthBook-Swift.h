#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef GROWTHBOOK_SWIFT_H
#define GROWTHBOOK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GrowthBook",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
/// This enumeration provides a convenient way to interact with various cache directories, simplifying the process of accessing and managing them using the FileManager API.
typedef SWIFT_ENUM(NSInteger, CacheDirectory, open) {
  CacheDirectoryApplicationSupport = 0,
  CacheDirectoryCaches = 1,
  CacheDirectoryDocuments = 2,
  CacheDirectoryLibrary = 3,
  CacheDirectoryDeveloperLibrary = 4,
};

@class NSString;
@class NSData;

/// This is actual implementation of Caching Layer in iOS
SWIFT_CLASS("_TtC10GrowthBook14CachingManager")
@interface CachingManager : NSObject
/// Set a custom cache saving directory
- (void)setCustomCachePath:(NSString * _Nonnull)path;
- (void)setSystemCacheDirectory:(enum CacheDirectory)directory;
/// Save content in cache
- (void)saveContentWithFileName:(NSString * _Nonnull)fileName content:(NSData * _Nonnull)content;
/// Get Content from cache
- (NSData * _Nullable)getContentWithFileName:(NSString * _Nonnull)fileName SWIFT_WARN_UNUSED_RESULT;
/// This function removes all files and subdirectories within the designated cache directory, which is a specific subdirectory within the app’s cache directory.
- (void)clearCache;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Defines the GrowthBook context.
SWIFT_CLASS("_TtC10GrowthBook7Context")
@interface Context : NSObject
- (NSString * _Nullable)getFeaturesURL SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getRemoteEvalUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSSEUrl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class Feature;

SWIFT_PROTOCOL("_TtP10GrowthBook14CryptoProtocol_")
@protocol CryptoProtocol
- (NSArray<NSNumber *> * _Nullable)encryptWithKey:(NSArray<NSNumber *> * _Nonnull)key iv:(NSArray<NSNumber *> * _Nonnull)iv plainText:(NSArray<NSNumber *> * _Nonnull)plainText error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nullable)decryptWithKey:(NSArray<NSNumber *> * _Nonnull)key iv:(NSArray<NSNumber *> * _Nonnull)iv cypherText:(NSArray<NSNumber *> * _Nonnull)cypherText error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, Feature *> * _Nullable)getFeaturesFromEncryptedFeaturesWithEncryptedString:(NSString * _Nonnull)encryptedString encryptionKey:(NSString * _Nonnull)encryptionKey SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10GrowthBook11EvalContext")
@interface EvalContext : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Defines a single experiment
SWIFT_CLASS("_TtC10GrowthBook10Experiment")
@interface Experiment : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The result of running an Experiment given a specific Context
SWIFT_CLASS("_TtC10GrowthBook16ExperimentResult")
@interface ExperimentResult : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A Feature object consists of possible values plus rules for how to assign values to users.
SWIFT_CLASS("_TtC10GrowthBook7Feature")
@interface Feature : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Result for Feature
SWIFT_CLASS("_TtC10GrowthBook13FeatureResult")
@interface FeatureResult : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Object used for mutual exclusion and filtering users out of experiments based on random hashes.
SWIFT_CLASS("_TtC10GrowthBook6Filter")
@interface Filter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10GrowthBook13GlobalContext")
@interface GlobalContext : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol NetworkProtocol;
@protocol StickyBucketServiceProtocol;
enum LoggerLevel : NSInteger;
@class GrowthBookSDK;

/// GrowthBookBuilder - inItializer for GrowthBook SDK for Apps
/// <ul>
///   <li>
///     HostURL - Server URL
///   </li>
///   <li>
///     EncryptionKey - Key for decrypting encrypted feature from API
///   </li>
///   <li>
///     UserAttributes - User Attributes
///   </li>
///   <li>
///     Tracking Closure - Track Events for Experiments
///   </li>
/// </ul>
SWIFT_CLASS("_TtC10GrowthBook17GrowthBookBuilder")
@interface GrowthBookBuilder : NSObject
- (nonnull instancetype)initWithApiHost:(NSString * _Nullable)apiHost clientKey:(NSString * _Nullable)clientKey encryptionKey:(NSString * _Nullable)encryptionKey attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes trackingCallback:(void (^ _Nonnull)(Experiment * _Nonnull, ExperimentResult * _Nonnull))trackingCallback refreshHandler:(void (^ _Nullable)(BOOL))refreshHandler backgroundSync:(BOOL)backgroundSync remoteEval:(BOOL)remoteEval OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFeatures:(NSData * _Nonnull)features attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes trackingCallback:(void (^ _Nonnull)(Experiment * _Nonnull, ExperimentResult * _Nonnull))trackingCallback refreshHandler:(void (^ _Nullable)(BOOL))refreshHandler backgroundSync:(BOOL)backgroundSync remoteEval:(BOOL)remoteEval OBJC_DESIGNATED_INITIALIZER;
/// Set Refresh Handler - Will be called when cache is refreshed
- (GrowthBookBuilder * _Nonnull)setRefreshHandlerWithRefreshHandler:(void (^ _Nonnull)(BOOL))refreshHandler SWIFT_WARN_UNUSED_RESULT;
/// Set Network Client - Network Client for Making API Calls
- (GrowthBookBuilder * _Nonnull)setNetworkDispatcherWithNetworkDispatcher:(id <NetworkProtocol> _Nonnull)networkDispatcher SWIFT_WARN_UNUSED_RESULT;
- (GrowthBookBuilder * _Nonnull)setStickyBucketServiceWithStickyBucketService:(id <StickyBucketServiceProtocol> _Nullable)stickyBucketService SWIFT_WARN_UNUSED_RESULT;
/// Set log level for SDK Logger
/// By default log level is set to <code>info</code>
- (GrowthBookBuilder * _Nonnull)setLogLevel:(enum LoggerLevel)level SWIFT_WARN_UNUSED_RESULT;
- (GrowthBookBuilder * _Nonnull)setForcedVariationsWithForcedVariations:(NSDictionary<NSString *, NSNumber *> * _Nonnull)forcedVariations SWIFT_WARN_UNUSED_RESULT;
- (GrowthBookBuilder * _Nonnull)setQAModeWithIsEnabled:(BOOL)isEnabled SWIFT_WARN_UNUSED_RESULT;
- (GrowthBookBuilder * _Nonnull)setEnabledWithIsEnabled:(BOOL)isEnabled SWIFT_WARN_UNUSED_RESULT;
- (GrowthBookBuilder * _Nonnull)setSystemCacheDirectory:(enum CacheDirectory)systemDirectory SWIFT_WARN_UNUSED_RESULT;
- (GrowthBookBuilder * _Nonnull)setCustomCacheDirectory:(NSString * _Nonnull)customDirectory SWIFT_WARN_UNUSED_RESULT;
- (GrowthBookSDK * _Nonnull)initializer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum SDKError : NSInteger;

/// The main export of the libraries is a simple GrowthBook wrapper class that takes a Context object in the constructor.
/// It exposes two main methods: feature and run.
SWIFT_CLASS("_TtC10GrowthBook13GrowthBookSDK")
@interface GrowthBookSDK : NSObject
/// Manually Refresh Cache
- (void)refreshCache;
/// This function removes all files and subdirectories within the designated cache directory, which is a specific subdirectory within the app’s cache directory.
- (void)clearCache;
/// Get Context - Holding the complete data regarding cached features & attributes etc.
- (Context * _Nonnull)getGBContext SWIFT_WARN_UNUSED_RESULT;
/// Get Cached Features
- (NSDictionary<NSString *, Feature *> * _Nonnull)getFeatures SWIFT_WARN_UNUSED_RESULT;
- (void)subscribe:(void (^ _Nonnull)(Experiment * _Nonnull, ExperimentResult * _Nonnull))result;
- (void)clearSubscriptions;
- (void)featuresFetchedSuccessfullyWithFeatures:(NSDictionary<NSString *, Feature *> * _Nonnull)features isRemote:(BOOL)isRemote;
/// The setEncryptedFeatures method takes an encrypted string with an encryption key and then decrypts it with the default method of decrypting or with a method of decrypting from the user
- (void)setEncryptedFeaturesWithEncryptedString:(NSString * _Nonnull)encryptedString encryptionKey:(NSString * _Nonnull)encryptionKey subtle:(id <CryptoProtocol> _Nullable)subtle;
- (void)featuresFetchFailedWithError:(enum SDKError)error isRemote:(BOOL)isRemote;
- (void)savedGroupsFetchFailedWithError:(enum SDKError)error isRemote:(BOOL)isRemote;
/// If remote eval is enabled, send needed data to backend to proceed remote evaluation
- (void)refreshForRemoteEval;
/// The feature method takes a single string argument, which is the unique identifier for the feature and returns a FeatureResult object.
- (FeatureResult * _Nonnull)evalFeatureWithId:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
/// The isOn method takes a single string argument, which is the unique identifier for the feature and returns the feature state on/off
- (BOOL)isOnFeature:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
/// The run method takes an Experiment object and returns an experiment result
- (ExperimentResult * _Nonnull)runWithExperiment:(Experiment * _Nonnull)experiment SWIFT_WARN_UNUSED_RESULT;
/// The setForcedFeatures method updates forced features
- (void)setForcedFeaturesWithForcedFeatures:(id _Nonnull)forcedFeatures;
/// The setAttributes method replaces the Map of user attributes that are used to assign variations
- (void)setAttributesWithAttributes:(id _Nonnull)attributes;
- (void)setAttributeOverridesWithOverrides:(id _Nonnull)overrides;
/// The setForcedVariations method updates forced variations and makes API call if remote eval is enabled
- (void)setForcedVariationsWithForcedVariations:(id _Nonnull)forcedVariations;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LoggerLevel, open) {
  LoggerLevelTrace = 0,
  LoggerLevelDebug = 1,
  LoggerLevelInfo = 2,
  LoggerLevelWarning = 3,
  LoggerLevelError = 4,
};


SWIFT_CLASS("_TtC10GrowthBook16MultiUserOptions")
@interface MultiUserOptions : NSObject
- (NSString * _Nullable)getFeaturesURL SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getRemoteEvalUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSSEUrl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Network Dispatcher Protocol for API Consumption
/// Implement this protocol to define specific implementation for Network Calls - to be made by SDK
SWIFT_PROTOCOL("_TtP10GrowthBook15NetworkProtocol_")
@protocol NetworkProtocol
- (void)consumeGETRequestWithUrl:(NSString * _Nonnull)url successResult:(void (^ _Nonnull)(NSData * _Nonnull))successResult errorResult:(void (^ _Nonnull)(NSError * _Nonnull))errorResult;
- (void)consumePOSTRequestWithUrl:(NSString * _Nonnull)url params:(NSDictionary<NSString *, id> * _Nonnull)params successResult:(void (^ _Nonnull)(NSData * _Nonnull))successResult errorResult:(void (^ _Nonnull)(NSError * _Nonnull))errorResult;
@end

/// GrowthBook Error Class to handle any error / exception scenario
typedef SWIFT_ENUM(NSInteger, SDKError, open) {
  SDKErrorFailedToLoadData = 0,
  SDKErrorFailedParsedData = 1,
  SDKErrorFailedMissingKey = 2,
  SDKErrorFailedEncryptedFeatures = 3,
  SDKErrorFailedEncryptedSavedGroups = 4,
};
static NSString * _Nonnull const SDKErrorDomain = @"GrowthBook.SDKError";


SWIFT_CLASS("_TtC10GrowthBook12StackContext")
@interface StackContext : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10GrowthBook25StickyAssignmentsDocument")
@interface StickyAssignmentsDocument : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP10GrowthBook27StickyBucketServiceProtocol_")
@protocol StickyBucketServiceProtocol
- (StickyAssignmentsDocument * _Nullable)getAssignmentsWithAttributeName:(NSString * _Nonnull)attributeName attributeValue:(NSString * _Nonnull)attributeValue SWIFT_WARN_UNUSED_RESULT;
- (void)saveAssignmentsWithDoc:(StickyAssignmentsDocument * _Nonnull)doc;
- (NSDictionary<NSString *, StickyAssignmentsDocument *> * _Nonnull)getAllAssignmentsWithAttributes:(NSDictionary<NSString *, NSString *> * _Nonnull)attributes SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10GrowthBook19StickyBucketService")
@interface StickyBucketService : NSObject <StickyBucketServiceProtocol>
- (StickyAssignmentsDocument * _Nullable)getAssignmentsWithAttributeName:(NSString * _Nonnull)attributeName attributeValue:(NSString * _Nonnull)attributeValue SWIFT_WARN_UNUSED_RESULT;
- (void)saveAssignmentsWithDoc:(StickyAssignmentsDocument * _Nonnull)doc;
- (NSDictionary<NSString *, StickyAssignmentsDocument *> * _Nonnull)getAllAssignmentsWithAttributes:(NSDictionary<NSString *, NSString *> * _Nonnull)attributes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC10GrowthBook11UserContext")
@interface UserContext : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
